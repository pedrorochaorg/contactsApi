version: 2
jobs:
  lint:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Ensure dependencies are installed
          command: go mod vendor

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Code linting
          command: |
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.21.0
            ./bin/golangci-lint run
  test:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Ensure dependencies are installed
          command: go mod vendor

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      # Run unit/integration
      - run:
          name: Running unit/integration tests
          command: |
            go test -race ./...
            go test -v -coverprofile coverage.out ./...
            mkdir -p /tmp/artifacts/coverage/
            go tool cover -html=coverage.out -o=/tmp/artifacts/coverage/index.html
      - store_artifacts:
          path: /tmp/artifacts
  acr:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Ensure dependencies are installed
          command: go mod vendor

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Define environment variables
          command: |
            echo 'export PACKAGENAME=$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV
            echo 'export GITHASH=$CIRCLE_SHA1' >> $BASH_ENV
            echo 'export APP_VERSION=$CIRCLE_BUILD_NUM' >> $BASH_ENV

      - setup_remote_docker
      - run:
          name: Bake docker image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
            docker build -t pedrorochaorg/${PACKAGENAME}:${GITHASH} \
                    --build-arg GITHASH=${GITHASH} \
                    --build-arg BUILDSTAMP=`date '+%FT%T%z'` \
                --build-arg APP_VERSION=${APP_VERSION} \
                .
      - run:
          name: Push to Docker Hub
          command: |
            echo "Tagging docker image"
            docker tag pedrorochaorg/${PACKAGENAME}:${GITHASH} pedrorochaorg/${PACKAGENAME}:latest_${CIRCLE_BRANCH}
            docker tag pedrorochaorg/${PACKAGENAME}:${GITHASH} pedrorochaorg/${PACKAGENAME}:${CIRCLE_BRANCH}_${GITHASH}
            echo "Pushing docker image to docker hub"
            docker push pedrorochaorg/${PACKAGENAME}:${GITHASH}
            docker push pedrorochaorg/${PACKAGENAME}:latest_${CIRCLE_BRANCH}
            docker push pedrorochaorg/${PACKAGENAME}:${CIRCLE_BRANCH}_${GITHASH}

workflows:
  version: 2
  build-test-and-push:
    jobs:
      - lint
      - test
      - acr:
          context: test
          requires:
            - test